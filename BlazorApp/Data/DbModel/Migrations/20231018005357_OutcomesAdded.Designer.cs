// <auto-generated />
using System;
using BlazorApp.Data.DbModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlazorApp.Migrations
{
    [DbContext(typeof(DbBensonbird25Context))]
    [Migration("20231018005357_OutcomesAdded")]
    partial class OutcomesAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlazorApp.Data.DbModel.Button", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColorId")
                        .HasColumnType("integer")
                        .HasColumnName("color_id");

                    b.Property<int?>("FontId")
                        .HasColumnType("integer")
                        .HasColumnName("font_id");

                    b.Property<int?>("Proportion")
                        .HasColumnType("integer")
                        .HasColumnName("proportion");

                    b.Property<int?>("ShapeId")
                        .HasColumnType("integer")
                        .HasColumnName("shape_id");

                    b.Property<string>("Title")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("button_pkey");

                    b.HasIndex("ColorId");

                    b.HasIndex("FontId");

                    b.HasIndex("ShapeId");

                    b.ToTable("button", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("HexValueInt")
                        .HasColumnType("integer")
                        .HasColumnName("hex_value_int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("color_pkey");

                    b.ToTable("color", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Display", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<int?>("BtnId")
                        .HasColumnType("integer")
                        .HasColumnName("btn_id");

                    b.Property<int?>("ColorId")
                        .HasColumnType("integer")
                        .HasColumnName("color_id");

                    b.Property<int?>("FontId")
                        .HasColumnType("integer")
                        .HasColumnName("font_id");

                    b.Property<int?>("Proportion")
                        .HasColumnType("integer")
                        .HasColumnName("proportion");

                    b.Property<int?>("ShapeId")
                        .HasColumnType("integer")
                        .HasColumnName("shape_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("display_pkey");

                    b.HasIndex("BtnId");

                    b.HasIndex("ColorId");

                    b.HasIndex("FontId");

                    b.HasIndex("ShapeId");

                    b.ToTable("display", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.DisplayBtn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BtnId")
                        .HasColumnType("integer")
                        .HasColumnName("btn_id");

                    b.Property<int>("DisplayId")
                        .HasColumnType("integer")
                        .HasColumnName("display_id");

                    b.HasKey("Id")
                        .HasName("padlock_pkey");

                    b.HasIndex("BtnId");

                    b.HasIndex("DisplayId");

                    b.ToTable("display_btn", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Floor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id")
                        .HasName("level_pkey");

                    b.ToTable("floor", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.FloorPadlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FloorId")
                        .HasColumnType("integer")
                        .HasColumnName("floor_id");

                    b.Property<int>("PadlockId")
                        .HasColumnType("integer")
                        .HasColumnName("padlock_id");

                    b.HasKey("Id")
                        .HasName("floor_padlock_pkey");

                    b.HasIndex("FloorId");

                    b.HasIndex("PadlockId");

                    b.ToTable("floor_padlock", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Font", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("font_pkey");

                    b.ToTable("font", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Gamer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Startdate")
                        .HasColumnType("date")
                        .HasColumnName("startdate");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("gamer_pkey");

                    b.ToTable("gamer", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.GamerLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FloorPadlockId")
                        .HasColumnType("integer")
                        .HasColumnName("floor_padlock_id");

                    b.Property<int?>("GamerId")
                        .HasColumnType("integer")
                        .HasColumnName("gamer_id");

                    b.HasKey("Id")
                        .HasName("gamer_log_pkey");

                    b.HasIndex("FloorPadlockId");

                    b.HasIndex("GamerId");

                    b.ToTable("gamer_log", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Outcome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FloorId")
                        .HasColumnType("integer")
                        .HasColumnName("floor_id");

                    b.Property<int?>("FloorPadlockId")
                        .HasColumnType("integer")
                        .HasColumnName("floor_padlock_id");

                    b.HasKey("Id")
                        .HasName("outcome_pkey");

                    b.HasIndex("FloorId");

                    b.HasIndex("FloorPadlockId");

                    b.ToTable("outcome", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Padlock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DisplayId")
                        .HasColumnType("integer")
                        .HasColumnName("display_id");

                    b.Property<int?>("PassId")
                        .HasColumnType("integer")
                        .HasColumnName("pass_id");

                    b.HasKey("Id")
                        .HasName("pad_pass_pkey");

                    b.HasIndex("DisplayId");

                    b.HasIndex("PassId");

                    b.ToTable("padlock", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Passkey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Keystring")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("keystring");

                    b.HasKey("Id")
                        .HasName("passkey_pkey");

                    b.ToTable("passkey", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.RequiredFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChosenFloorId")
                        .HasColumnType("integer")
                        .HasColumnName("chosenfloor_id");

                    b.Property<int>("RequiredFloorId")
                        .HasColumnType("integer")
                        .HasColumnName("requiredfloor_id");

                    b.HasKey("Id")
                        .HasName("requiredfloor_pkey");

                    b.HasIndex("ChosenFloorId");

                    b.HasIndex("RequiredFloorId");

                    b.ToTable("requiredfloor", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Shape", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Numsides")
                        .HasColumnType("integer")
                        .HasColumnName("numsides");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("shape_pkey");

                    b.ToTable("shape", "game234");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Button", b =>
                {
                    b.HasOne("BlazorApp.Data.DbModel.Color", "Color")
                        .WithMany("Buttons")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("button_color_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Font", "Font")
                        .WithMany("Buttons")
                        .HasForeignKey("FontId")
                        .HasConstraintName("button_font_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Shape", "Shape")
                        .WithMany("Buttons")
                        .HasForeignKey("ShapeId")
                        .HasConstraintName("button_shape_id_fkey");

                    b.Navigation("Color");

                    b.Navigation("Font");

                    b.Navigation("Shape");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Display", b =>
                {
                    b.HasOne("BlazorApp.Data.DbModel.Button", "Btn")
                        .WithMany("Displays")
                        .HasForeignKey("BtnId")
                        .HasConstraintName("display_btn_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Color", "Color")
                        .WithMany("Displays")
                        .HasForeignKey("ColorId")
                        .HasConstraintName("display_color_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Font", "Font")
                        .WithMany("Displays")
                        .HasForeignKey("FontId")
                        .HasConstraintName("display_font_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Shape", "Shape")
                        .WithMany("Displays")
                        .HasForeignKey("ShapeId")
                        .HasConstraintName("display_shape_id_fkey");

                    b.Navigation("Btn");

                    b.Navigation("Color");

                    b.Navigation("Font");

                    b.Navigation("Shape");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.DisplayBtn", b =>
                {
                    b.HasOne("BlazorApp.Data.DbModel.Button", "Btn")
                        .WithMany("DisplayBtns")
                        .HasForeignKey("BtnId")
                        .IsRequired()
                        .HasConstraintName("display_btn_btn_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Display", "Display")
                        .WithMany("DisplayBtns")
                        .HasForeignKey("DisplayId")
                        .IsRequired()
                        .HasConstraintName("display_btn_display_id_fkey");

                    b.Navigation("Btn");

                    b.Navigation("Display");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.FloorPadlock", b =>
                {
                    b.HasOne("BlazorApp.Data.DbModel.Floor", "Floor")
                        .WithMany("FloorPadlocks")
                        .HasForeignKey("FloorId")
                        .IsRequired()
                        .HasConstraintName("floor_padlock_floor_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Padlock", "Padlock")
                        .WithMany("FloorPadlocks")
                        .HasForeignKey("PadlockId")
                        .IsRequired()
                        .HasConstraintName("floor_padlock_padlock_id_fkey");

                    b.Navigation("Floor");

                    b.Navigation("Padlock");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.GamerLog", b =>
                {
                    b.HasOne("BlazorApp.Data.DbModel.FloorPadlock", "FloorPadlock")
                        .WithMany("GamerLogs")
                        .HasForeignKey("FloorPadlockId")
                        .HasConstraintName("gamer_log_floor_padlock_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Gamer", "Gamer")
                        .WithMany("GamerLogs")
                        .HasForeignKey("GamerId")
                        .HasConstraintName("gamer_log_gamer_id_fkey");

                    b.Navigation("FloorPadlock");

                    b.Navigation("Gamer");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Outcome", b =>
                {
                    b.HasOne("BlazorApp.Data.DbModel.Floor", "Floor")
                        .WithMany("Outcomes")
                        .HasForeignKey("FloorId")
                        .HasConstraintName("outcome_floor_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.FloorPadlock", "FloorPadlock")
                        .WithMany("Outcomes")
                        .HasForeignKey("FloorPadlockId")
                        .HasConstraintName("outcome_floor_padlock_id_fkey");

                    b.Navigation("Floor");

                    b.Navigation("FloorPadlock");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Padlock", b =>
                {
                    b.HasOne("BlazorApp.Data.DbModel.Display", "Display")
                        .WithMany("Padlocks")
                        .HasForeignKey("DisplayId")
                        .HasConstraintName("padlock_display_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Passkey", "Pass")
                        .WithMany("Padlocks")
                        .HasForeignKey("PassId")
                        .HasConstraintName("padlock_pass_id_fkey");

                    b.Navigation("Display");

                    b.Navigation("Pass");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.RequiredFloor", b =>
                {
                    b.HasOne("BlazorApp.Data.DbModel.Floor", "ChosenFloor")
                        .WithMany("RequiredFloorChosenFloors")
                        .HasForeignKey("ChosenFloorId")
                        .IsRequired()
                        .HasConstraintName("requiredfloor_chosenfloor_id_fkey");

                    b.HasOne("BlazorApp.Data.DbModel.Floor", "RequiredFloorNavigation")
                        .WithMany("RequiredFloorRequiredFloorNavigations")
                        .HasForeignKey("RequiredFloorId")
                        .IsRequired()
                        .HasConstraintName("requiredfloor_requiredfloor_id_fkey");

                    b.Navigation("ChosenFloor");

                    b.Navigation("RequiredFloorNavigation");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Button", b =>
                {
                    b.Navigation("DisplayBtns");

                    b.Navigation("Displays");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Color", b =>
                {
                    b.Navigation("Buttons");

                    b.Navigation("Displays");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Display", b =>
                {
                    b.Navigation("DisplayBtns");

                    b.Navigation("Padlocks");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Floor", b =>
                {
                    b.Navigation("FloorPadlocks");

                    b.Navigation("Outcomes");

                    b.Navigation("RequiredFloorChosenFloors");

                    b.Navigation("RequiredFloorRequiredFloorNavigations");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.FloorPadlock", b =>
                {
                    b.Navigation("GamerLogs");

                    b.Navigation("Outcomes");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Font", b =>
                {
                    b.Navigation("Buttons");

                    b.Navigation("Displays");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Gamer", b =>
                {
                    b.Navigation("GamerLogs");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Padlock", b =>
                {
                    b.Navigation("FloorPadlocks");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Passkey", b =>
                {
                    b.Navigation("Padlocks");
                });

            modelBuilder.Entity("BlazorApp.Data.DbModel.Shape", b =>
                {
                    b.Navigation("Buttons");

                    b.Navigation("Displays");
                });
#pragma warning restore 612, 618
        }
    }
}
